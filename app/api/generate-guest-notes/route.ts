import { OpenAI } from "openai";
import { NextResponse } from "next/server";
import { withCreditValidation } from "../../../lib/creditMiddleware";

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// Main handler function
async function handleGuestNotesGeneration(req: Request) {
  try {
    const body = await req.json();
    const { guest, eventType, chartName } = body;

    if (!guest || !guest.fullName) {
      return NextResponse.json({ error: "Guest information is required" }, { status: 400 });
    }

    let prompt = `Generate a brief, helpful note for wedding seating arrangements based on the guest information provided. The note should be natural, friendly, and provide practical seating recommendations.\n\n`;
    prompt += `**Guest Information:**\n`;
    prompt += `- Name: ${guest.fullName}\n`;
    if (guest.relationship) {
      prompt += `- Relationship: ${guest.relationship}\n`;
    }
    if (guest.mealPreference) {
      prompt += `- Meal Preference: ${guest.mealPreference}\n`;
    }
    if (eventType) {
      prompt += `- Event Type: ${eventType}\n`;
    }
    if (chartName) {
      prompt += `- Chart Name: ${chartName}\n`;
    }

    prompt += `\n**Instructions:**\n`;
    prompt += `1. Generate a concise note (1-2 sentences) that provides seating guidance\n`;
    prompt += `2. Use the guest's first name in the note\n`;
    prompt += `3. Consider their relationship to the couple for appropriate seating recommendations\n`;
    prompt += `4. Be specific about table placement (e.g., "near the sweetheart table", "with other family members", "in a quieter area")\n`;
    prompt += `5. Keep the tone warm and helpful\n`;
    prompt += `6. Focus on creating a comfortable experience for the guest\n\n`;

    prompt += `**Example format:**\n`;
    prompt += `"[Guest first name] is a [Relationship] to the couple and so should sit [specific seating recommendation]."\n\n`;

    prompt += `Generate the note now:`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        { 
          role: "system", 
          content: "You are a helpful wedding planning assistant that generates thoughtful seating notes for guests. Keep responses concise, warm, and practical." 
        },
        { role: "user", content: prompt }
      ],
      temperature: 0.7,
      max_tokens: 150
    });

    const content = completion.choices[0].message.content;
    if (!content) {
      throw new Error("No content generated by OpenAI");
    }

    // Clean up the response
    const note = content.trim().replace(/^["']|["']$/g, ''); // Remove surrounding quotes if any

    return NextResponse.json({ 
      note,
      success: true 
    });

  } catch (error: any) {
    console.error("Error in /api/generate-guest-notes:", error);
    return NextResponse.json(
      { error: "Failed to generate guest notes" }, 
      { status: 500 }
    );
  }
}

// Export the POST function wrapped with credit validation
export const POST = withCreditValidation(handleGuestNotesGeneration, {
  feature: 'guest_notes_generation',
  userIdField: 'userId',
  requireAuth: true,
  errorMessage: 'Insufficient credits for guest notes generation. Please upgrade your plan to continue using AI features.'
});

